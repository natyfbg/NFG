# backend/docker-compose.yml
services:
  mongo:
    image: mongo:7
    container_name: nfg-mongo
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.runCommand({ ping: 1 })"]
      interval: 10s
      timeout: 5s
      retries: 5

  app:
    build: .
    container_name: nfg-app
    depends_on:
      mongo:
        condition: service_healthy
    healthcheck:
      test: [ "CMD", "curl", "-fsS", "http://localhost:8000/healthz" ]
      interval: 10s
      timeout: 3s
      retries: 5
      start_period: 10s

    # Load env from .env (admin creds, secret, etc.)
    env_file: .env

    environment:
      # IMPORTANT: Force app to use the Docker mongo service, regardless of what's in .env
      MONGO_URI: mongodb://mongo:27017/NFG
      # Keep your secret key from .env if present; else fall back
      SECRET_KEY: ${SECRET_KEY:-dev-secret}

    ports:
      - "5050:8000"   # host:container

    volumes:
      - .:/app
      - ./static/uploads:/app/static/uploads

    # Run with Gunicorn (Flask app object is app:app)
    command: gunicorn -w 3 -b 0.0.0.0:8000 app:app --timeout 120

volumes:
  mongo_data:
