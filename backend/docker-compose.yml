version: "3.9"

services:
  mongo:
    image: mongo:7
    container_name: nfg-mongo
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    healthcheck:
      test: ["CMD", "mongosh", "--quiet", "--eval", "db.adminCommand({ ping: 1 }).ok"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: nfg-app
    depends_on:
      mongo:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-fsS", "http://localhost:8000/healthz"]
      interval: 10s
      timeout: 3s
      retries: 5
      start_period: 10s

    # This compose file lives in backend/, but .env is at repo root.
    # If you move .env into backend/, change this to ".env".
    env_file: ../.env

    environment:
      # Force the app to use the Docker mongo service in local dev.
      MONGO_URI: mongodb://mongo:27017/NFG
      # Keep SECRET_KEY from .env if present; else fallback.
      SECRET_KEY: ${SECRET_KEY:-dev-secret}

    ports:
      - "5050:8000"  # host:container

    volumes:
      - .:/app
      - ./static/uploads:/app/static/uploads

    command: gunicorn -w 3 -b 0.0.0.0:8000 app:app --timeout 120
    restart: unless-stopped

  # One-shot seeding helper (run manually).
  seed:
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      mongo:
        condition: service_healthy
    env_file: ../.env
    environment:
      MONGO_URI: mongodb://mongo:27017/NFG
    command: python seed.py
    profiles: ["tools"]  # won't start with `up` unless profile is specified

volumes:
  mongo_data:
